version: '3'
services:
  postgres:
    image: postgres:13.4-buster
    container_name: postgres
    environment:
      PGPORT: 5432
      POSTGRES_USER: mpatel
      POSTGRES_PASSWORD: transcendence
      DB_DATABASE: ft_database
    ports:
      - "5432:5432"
    networks:
      - inception
    volumes:
      - ./requirement/database/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
  reactjs:
    image: node:19
    container_name: reactjs
    working_dir: /app/frontend
    env_file:
      - .env
    command: >
      bash -c "npm install
      && npm run build"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    networks:
      - inception
    depends_on:
      - nestjs
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/:/etc/nginx/
      - ./frontend/build:/var/www/html
    ports:
      - 80:80
    command: /bin/sh -c "nginx -g 'daemon off;'"
    depends_on:
      - reactjs
    networks:
      - inception
  nestjs:
    image: node:19
    container_name: nestjs
    working_dir: /app/backend
    command: >
      bash -c "npm install
      && npm run build
      && npm run start:prod
      && npm i -g @nestjs/cli"
    networks:
      - inception
    env_file:
      - .env
    ports:
      - "3001:3001"
      - "5555:5555"
      - "8001:8001"
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    depends_on:
      - postgres
volumes:
  postgres_data:
networks:
  inception:
    driver: bridge
    name: inception
