// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
  id                    String          @id @default(uuid())
  login                 String          @unique
  username              String?
  first_name            String?
  profile_picture       String?
  last_name             String?
  secret_code           String?
  friends               User[]          @relation("friends")
  friends_of            User[]          @relation("friends")
  blocked_users         User[]          @relation("blocked_users")
  blocked_by            User[]          @relation("blocked_users")
  user_status           UserStatus      @default(OFFLINE)
  created_at            DateTime        @default(now())
  updated_at            DateTime        @default(now())

  participant_in        Participant[]
  playerOneHistories GameHistory[] @relation("PlayerOne")
  playerTwoHistories GameHistory[] @relation("PlayerTwo")
}

// Conversation table
model Conversation {
  id                    String          @id @default(uuid())
  title                 String?         @unique
  password              String?
  privacy               Privacy         @default(PUBLIC)
  created_at            DateTime        @default(now())
  updated_at            DateTime        @default(now())

  messages              Message[]
  participants          Participant[]
}

// Message table
model Message {
  id                    String          @id @default(uuid())
  message               String          @default("")
  conversation_id       String
  conversation          Conversation    @relation(fields: [conversation_id], references: [id])
  author_id             String
  author                Participant     @relation(fields: [author_id], references: [id])
  created_at            DateTime        @default(now())
  deleted_at            DateTime?
}

// Participant table
model Participant {
  id                    String          @id @default(uuid())
  user_id               String
  role                  Role            @default(USER)
  conversation_status   Status          @default(ACTIVE)
  conversation_id       String
  created_at            DateTime        @default(now())
  updated_at            DateTime        @default(now())

  user                  User            @relation(fields: [user_id], references: [id])
  conversation          Conversation    @relation(fields: [conversation_id], references: [id])
  messages              Message[]
}

model GameHistory {
  id            String   @id @default(uuid())
  player_one    String
  player_two    String
  player_score  Int
  opponent_score Int
  winner        String
  looser        String
  playerOne     User     @relation("PlayerOne", fields: [player_one], references: [id])
  playerTwo     User     @relation("PlayerTwo", fields: [player_two], references: [id])
  createdAt     DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}

enum Privacy {
  PUBLIC
  PRIVATE
  PROTECTED
  DIRECT
}

enum Status {
  ACTIVE
  BLOCKED
  DELETED
}

enum UserStatus {
  ONLINE
  OFFLINE
  IN_GAME
}
