// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int             @id @default(autoincrement())
  email                 String          @unique
  login                 String
  first_name            String?
  last_name             String?
  is_active             Boolean         @default(false)
  is_reported           Boolean         @default(false)
  is_blocked            Boolean         @default(false)
  createAt              DateTime        @default(now())
  updateAt              DateTime        @default(now())

  participant_in        Participant?
  game                  Game[]
}

// Conversation table
model Conversation {
  id                    Int             @id @default(autoincrement())
  title                 String
  creator_id            Int
  channel_id            String
  created_at            DateTime
  updated_at            DateTime
  deleted_at            DateTime?

  messages              Message[]       @relation("conversation")
  participants          Participant[]   @relation("conversation")
}

// Message table
model Message {
  id                    Int             @id @default(autoincrement())
  guid                  String
  conversation_id       Int
  message               String          @default("")
  author_id             Int
  conversation          Conversation    @relation("conversation", fields: [conversation_id], references: [id])
  created_at            DateTime
  deleted_at            DateTime?

  @@map(name: "messages")
}

// Participant table
model Participant {
  id                    Int             @id @default(autoincrement())
  conversation_id       Int
  user_id               Int             @unique
  type                  String
  created_at            DateTime
  updated_at            DateTime

  user                  User            @relation(fields: [user_id], references: [id])
  conversation          Conversation    @relation("conversation", fields: [conversation_id], references: [id])

  @@unique([conversation_id, user_id])
}

// BlockList table
model BlockList {
  id                    Int             @id @default(autoincrement())
  user_id               Int
  participant_id        Int
  created_at            DateTime
}

// DeletedConversation table
model DeletedConversation {
  id                    Int             @id @default(autoincrement())
  conversation_id       Int
  user_id               Int
  created_at            DateTime
}

model Access {
  id                    Int             @id @default(autoincrement())
  user_id               Int
  token                 String
  created_at            DateTime
  updated_at            DateTime
}

model DeletedMessages {
  id                    Int             @id @default(autoincrement())
  message_id            Int
  user_id               Int
  created_at            DateTime
  updateAt              DateTime
}

model Game {
  id                    Int             @id @default(autoincrement())
  player                User[]
  side                  Int
  ballX                 Int
  ballY                 Int
  isPaused              Boolean
  map                   Int
  status                Int
  score                 Int
  createAt              DateTime        @default(now())
  updateAt              DateTime        @default(now())
}
