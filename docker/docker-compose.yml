version: '3'
services:
  nestjs:
    build:
      context: ./requirements/nest
    image: nest
    container_name: nest
    ports:
      - "80:3000"
    volumes:
      - nestjs-data:/app
    networks:
      - my-network
    depends_on:
      - postgres
  # postgres:
  #   build:
  #     context: ./requirements/postgres
  #   image: postgres
  #   container_name: postgres
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - my-network
  postgres:
    image: "postgres:buster"  # << added "buster" for the workaround
    container_name: "postgres"
    environment:
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'my-db'
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my-network
  # react:
  #   build:
  #       context: ./requirements/react
  #   image: react
  #   container_name: react
  #   volumes:
  #     - type: bind
  #       source: ./react
  #       target: /app
  #   command: npm start
  #   depends_on:
  #     - nestjs
networks:
  my-network:
    driver: bridge
volumes:
  postgres-data:
    driver: local
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: /Users/mkaruvan/Documents/ft_transcendence/srcs/postgres
  nestjs-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Users/mkaruvan/Documents/ft_transcendence/srcs/nestjs
  

